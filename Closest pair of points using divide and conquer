import math
def distance(p1, p2):
    return math.sqrt((p1[0] - p2[0]) ** 2 + (p1[1] - p2[1]) ** 2)
def brute_force(points, left, right):
    min_dist = float('inf')
    for i in range(left, right):
        for j in range(i + 1, right + 1):
            if distance(points[i], points[j]) < min_dist:
                min_dist = distance(points[i], points[j])
    return min_dist
def strip_closest(strip, size, d):
    min_dist = d
    for i in range(size):
        for j in range(i + 1, size):
            if abs(strip[i][1] - strip[j][1]) < min_dist:
                min_dist = distance(strip[i], strip[j])
    return min_dist
def closest_util(points, left, right):
    if right - left <= 3:
        return brute_force(points, left, right)
    mid = (left + right) // 2
    mid_point = points[mid]
    dl = closest_util(points, left, mid)
    dr = closest_util(points, mid + 1, right)
    d = min(dl, dr)
    strip = []
    for i in range(left, right + 1):
        if abs(points[i][0] - mid_point[0]) < d:
            strip.append(points[i])
    return min(d, strip_closest(strip, len(strip), d))
def closest_pair(points):
    points.sort(key=lambda x: x[0])
    return closest_util(points, 0, len(points) - 1)
points = [(2, 3), (12, 30), (40, 50), (5, 1), (12, 10), (3, 4)]
print("The smallest distance is", closest_pair(points))
